{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","calculateWinner","squares","lines","i","length","_lines$i","Object","D_DarkST_code_zone_comeback_web_react_stank_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_5__","b","c","Board","_this","this","renderSquare","React","Component","Game","_this2","D_DarkST_code_zone_comeback_web_react_stank_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","D_DarkST_code_zone_comeback_web_react_stank_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_DarkST_code_zone_comeback_web_react_stank_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","history","Array","fill","xIsNext","stepNumber","slice","setState","concat","step","status","_this3","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce0355f9.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props){\r\n    return (\r\n      <button \r\n        className=\"square\" \r\n        onClick={props.onClick}\r\n      >\r\n        {props.value}\r\n      </button>\r\n    );\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square \r\n        value={this.props.squares[i]}\r\n        onClick = { ()=>this.props.onClick(i) }\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      xIsNext: true,\r\n      stepNumber:0\r\n    };\r\n  }\r\n\r\n  handleClick(i){\r\n    const history = this.state.history.slice(0,this.state.stepNumber+1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    } \r\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n    this.setState({\r\n      history: history.concat([{\r\n        squares: squares\r\n      }]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber:history.length\r\n    });\r\n  }\r\n\r\n  jumpTo(step)\r\n  {\r\n    this.setState({\r\n      stepNumber:step,\r\n      xIsNext : (step%2) == 0\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ?\r\n        'Go to move #' + move :\r\n        'Go to game start';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n            squares={current.squares}\r\n            onClick={i => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{ status }</div>\r\n          <ol>{ moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}